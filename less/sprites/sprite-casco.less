/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@icon-assurance-sale-name: 'icon-assurance-sale';
@icon-assurance-sale-x: 257px;
@icon-assurance-sale-y: 114px;
@icon-assurance-sale-offset-x: -257px;
@icon-assurance-sale-offset-y: -114px;
@icon-assurance-sale-width: 108px;
@icon-assurance-sale-height: 108px;
@icon-assurance-sale-total-width: 371px;
@icon-assurance-sale-total-height: 338px;
@icon-assurance-sale-image: '../img/sprite-casco.png';
@icon-assurance-sale: 257px 114px -257px -114px 108px 108px 371px 338px '../img/sprite-casco.png' 'icon-assurance-sale';
@icon-away-losses-name: 'icon-away-losses';
@icon-away-losses-x: 0px;
@icon-away-losses-y: 231px;
@icon-away-losses-offset-x: 0px;
@icon-away-losses-offset-y: -231px;
@icon-away-losses-width: 104px;
@icon-away-losses-height: 107px;
@icon-away-losses-total-width: 371px;
@icon-away-losses-total-height: 338px;
@icon-away-losses-image: '../img/sprite-casco.png';
@icon-away-losses: 0px 231px 0px -231px 104px 107px 371px 338px '../img/sprite-casco.png' 'icon-away-losses';
@icon-reliable-company-name: 'icon-reliable-company';
@icon-reliable-company-x: 0px;
@icon-reliable-company-y: 122px;
@icon-reliable-company-offset-x: 0px;
@icon-reliable-company-offset-y: -122px;
@icon-reliable-company-width: 126px;
@icon-reliable-company-height: 107px;
@icon-reliable-company-total-width: 371px;
@icon-reliable-company-total-height: 338px;
@icon-reliable-company-image: '../img/sprite-casco.png';
@icon-reliable-company: 0px 122px 0px -122px 126px 107px 371px 338px '../img/sprite-casco.png' 'icon-reliable-company';
@icon-service-estimate-name: 'icon-service-estimate';
@icon-service-estimate-x: 0px;
@icon-service-estimate-y: 0px;
@icon-service-estimate-offset-x: 0px;
@icon-service-estimate-offset-y: 0px;
@icon-service-estimate-width: 136px;
@icon-service-estimate-height: 120px;
@icon-service-estimate-total-width: 371px;
@icon-service-estimate-total-height: 338px;
@icon-service-estimate-image: '../img/sprite-casco.png';
@icon-service-estimate: 0px 0px 0px 0px 136px 120px 371px 338px '../img/sprite-casco.png' 'icon-service-estimate';
@icon-service-happy-name: 'icon-service-happy';
@icon-service-happy-x: 128px;
@icon-service-happy-y: 122px;
@icon-service-happy-offset-x: -128px;
@icon-service-happy-offset-y: -122px;
@icon-service-happy-width: 127px;
@icon-service-happy-height: 95px;
@icon-service-happy-total-width: 371px;
@icon-service-happy-total-height: 338px;
@icon-service-happy-image: '../img/sprite-casco.png';
@icon-service-happy: 128px 122px -128px -122px 127px 95px 371px 338px '../img/sprite-casco.png' 'icon-service-happy';
@icon-service-repair-name: 'icon-service-repair';
@icon-service-repair-x: 106px;
@icon-service-repair-y: 231px;
@icon-service-repair-offset-x: -106px;
@icon-service-repair-offset-y: -231px;
@icon-service-repair-width: 118px;
@icon-service-repair-height: 74px;
@icon-service-repair-total-width: 371px;
@icon-service-repair-total-height: 338px;
@icon-service-repair-image: '../img/sprite-casco.png';
@icon-service-repair: 106px 231px -106px -231px 118px 74px 371px 338px '../img/sprite-casco.png' 'icon-service-repair';
@icon-service-spares-name: 'icon-service-spares';
@icon-service-spares-x: 257px;
@icon-service-spares-y: 0px;
@icon-service-spares-offset-x: -257px;
@icon-service-spares-offset-y: 0px;
@icon-service-spares-width: 114px;
@icon-service-spares-height: 112px;
@icon-service-spares-total-width: 371px;
@icon-service-spares-total-height: 338px;
@icon-service-spares-image: '../img/sprite-casco.png';
@icon-service-spares: 257px 0px -257px 0px 114px 112px 371px 338px '../img/sprite-casco.png' 'icon-service-spares';
@icon-service-view-name: 'icon-service-view';
@icon-service-view-x: 138px;
@icon-service-view-y: 0px;
@icon-service-view-offset-x: -138px;
@icon-service-view-offset-y: 0px;
@icon-service-view-width: 117px;
@icon-service-view-height: 118px;
@icon-service-view-total-width: 371px;
@icon-service-view-total-height: 338px;
@icon-service-view-image: '../img/sprite-casco.png';
@icon-service-view: 138px 0px -138px 0px 117px 118px 371px 338px '../img/sprite-casco.png' 'icon-service-view';
@spritesheet-width: 371px;
@spritesheet-height: 338px;
@spritesheet-image: '../img/sprite-casco.png';
@spritesheet-sprites: @icon-assurance-sale @icon-away-losses @icon-reliable-company @icon-service-estimate @icon-service-happy @icon-service-repair @icon-service-spares @icon-service-view;
@spritesheet: 371px 338px '../img/sprite-casco.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
